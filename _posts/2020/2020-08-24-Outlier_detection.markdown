---
comments: true
title: DelBay19 outlier detection initial summary
date: '2020-08-24 12:00'
tags:
  - DelBay19
  - ouliter
  - null model
  - WGS
  - Fisher's exact
categories:
  - WGS data analysis
---

Several methods are used for outlier detection and listed below,

1) Fst based outlier detection by permutation and angsd (not included in this post)

2) Fisher's exact tests based on allelic count

3) Single Generation Selection (SGS) tests (same as the sea bream paper)

4) Survival Vector method from the stick insect paper

--- 

Fisher's exact tests (two draws from a common pool approach)

I performed this test in two datasets: first is the challenge (CH) vs. reference (REF) group, second is the HC (Hope Creek) vs New Beds (NB) group.

- Results

P-value histogram for challenge (CH) vs. reference (REF)

<img src="https://hzz0024.github.io/images/outlier/fisher_exact_chr_pvalue_hist.jpeg" alt="img" width="800"/>

P-value histogram for HC (Hope Creek) vs New Beds (NB) 

<img src="https://hzz0024.github.io/images/outlier/fisher_exact_wild_pvalue_hist.jpeg" alt="img" width="800"/>

Result for challenge (CH) vs. reference (REF) 

```R
> length(lfdr[lfdr<0.05])
[1] 96
```

Result for HC (Hope Creek) vs New Beds (NB) 

```R
> length(lfdr[lfdr<0.1])
[1] 442
> length(lfdr[lfdr<0.05])
[1] 61
```

---

SGS (two draws from a common pool approach)

Scripts for SGS test, modified from Rey et al. 2020.  

A bash script is used to set the three parameters for the SGS test. They are 

1) num_split=100 # how many parts we want to divide the whole snp list into smaller ones 

2) num_sample=1000000 # sampling times, here I set as 1 million times

3) total_n=1732036 # total number of snps  

- results

Two test were conducted using SGS approach, one with 100k sampling and another one with 1 million sampling. The two gene pools in the null model are challenge (n = 50) and reference (n = 48) populations. 

P-value histogram for 100k sampling result

<img src="https://hzz0024.github.io/images/outlier/SGS_local_100k_pvalue_hist.jpeg" alt="img" width="800"/>

P-value histogram for 1 million sampling result

<img src="https://hzz0024.github.io/images/outlier/SGS_local_1M_pvalue_hist.jpeg" alt="img" width="800"/>

Result for 100k sampling

```R
> name = 'p_value_local_100k.txt'
> res <- read.delim(name, header = FALSE, sep='\t')
> p_value <- res$V3
> length(which(p_value<0.05))
[1] 345847
> hist(p_value)
> qobj <- qvalue(p = p_value,pi0=1)
> lfdr <- qobj$lfdr
> length(lfdr[lfdr<0.05])
[1] 158556
```
Result for 1 million sampling

```R
name = 'p_value_local_1m.txt'
res <- read.delim(name, header = FALSE, sep='\t')
p_value <- res$V3
length(which(p_value<0.05))
[1] 345885
> hist(p_value)
> qobj <- qvalue(p = p_value,pi0=1)
> lfdr <- qobj$lfdr
> length(lfdr[lfdr<0.05])
[1] 158338
```

---

Survival vector (sequential sampling approach)

I put two plots here to illustrate the concept of this survival vector permutation method for outlier detection. 

<img src="https://hzz0024.github.io/images/pmt/design.jpg" alt="img" width="800"/> 

<img src="https://hzz0024.github.io/images/pmt/format.jpg" alt="img" width="800"/>

Here the survival vector model I is individual locus null model, which assumes the absence of selection on individual loci. It takes assumption that each genotype is independent and there is no selection on individual loci. To approach that, I labeled the sequencing block (each block has sequencing counts for A, T, C, G) for each snp and randomly turn on/off some sequencing count blocks until 98-48 = 50 blocks remained in the dataset.  

The second model is genome-wide null model, which assumes the absence of selection on any loci. It is useful to test if survival was wholly independent of genotypes. Similar to survival vector model I, in model II, I labeled the sample and randomly turn on/off some samples (so that the whole sequencing block for this sample is gone) until 98-48 = 50 samples remained in the dataset. 

Here I used both quantile and nominal p-value methods to calculate the significance. 

The whole process is seperated into three parts:

1) produce null data using a binomial survival vector, sampling 100 times.

2) estimate the allele frequency using the C++ based script published by [Kim et al 2011](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-231) (with minor modification). This is the script angsd used for MAF estimation (i.e. -doMaf 1). I modified the script to ensure that the same allele is used for frequency esitmation. The allele frequency is obtained based on the genotype likelihoods, with the input as sequencing counts data (generated by -dumpcount 4 in the angsd).
   
3) for each SNP, calculate the deltap (from 800 sampling data) and compare the null distribution to the observed deltap with quantile and nominal p-value approached (see below)

```R
outputfile='outsnp.txt'
sink(outputfile)
cat(paste0('chr\tpos\tquantile\tpvalue\tpvalue\n'))
cnt1 = 0
cnt2 = 0
pvalues = c()
#for(snp in seq(1,500)){ $ inital test with 500 snps
for(snp in seq(1,dim(ref_dat)[1])){
  s = paste0(snp,'/',dim(ref_dat)[1])
  message(s,"\r",appendLF=FALSE)
  obs_deltap = obs_deltaps[snp]
  
  cat(ref_dat$chromo[snp])
  cat('\t')
  cat(ref_dat$position[snp])
  cat('\t')
  
  delta_ps = as.numeric(data[snp,])
  right_tail = quantile(delta_ps, .999)
  left_tail = quantile(delta_ps, .001)
  
  if (obs_deltap < left_tail | obs_deltap > right_tail){
    cnt1 = cnt1 +  1
    cat(1)
    cat('\t')
  }else{
    cat(0)
    cat('\t')
  }
  if(obs_deltap>0){
    p_value <- (length(delta_ps[delta_ps>=obs_deltap])+1)/(length(delta_ps)+1)
  }
  if(obs_deltap<0){
    p_value <- (length(delta_ps[delta_ps<=obs_deltap])+1)/(length(delta_ps)+1)
  }
  if(obs_deltap==0){
    p_value <- 1
  }
  
  pvalues = c(pvalues, p_value)
  if(p_value < 0.05){
    cnt2 = cnt2 + 1
    cat(1)
    cat('\t')
  }else{
    cat(0)
    cat('\t')
  }
  cat(p_value)
  cat('\n')
}
sink()
message(cnt1)
message(cnt2)
```

- Results

P-value histogram for survival vector I model (800 permutations)

<img src="https://hzz0024.github.io/images/outlier/survival_vector_1_pvalue_hist.jpeg" alt="img" width="800"/>

Results for survival vector I model

```R
> length(which(p_value<0.05))
[1] 188505
> qobj <- qvalue(p = p_value,pi0=1)
> lfdr <- qobj$lfdr
> length(lfdr[lfdr<0.2])
[1] 4751
> length(lfdr[lfdr<0.05])
[1] 0
```

The survival vector II model is still under running. 

---

## Summary

- Number of outliers

I made a table to list the number of outliers from each method

|     Method       | p-value < 0.05 | fdr < 0.05 |  
|------------------|----------------|------------|
| Fisher's exact   |   175197       |   96       | 
| SGS              |   345885       |  158338    |     
| Survival vector I|   188505       |    0       |

- Fisher's exact tests (two draws from a common pool approach)

|     Method       | No. SNPs | p-value < 0.05 | fdr < 0.05 | fdr < 0.1  | 
|------------------|----------|----------------|------------|------------|
| CH vs. REF       | 1732036  |                |   96       |            | 
| HC vs. NB        | 2083615  |   175197       |   61       |    442     | 

The Fisher's exact approach is so far my most satisfied method. I will keep running these tests on different wild population pairs. With FDR < 0.05, I did not identify the common shared snps from CH vs. REF and HC vs. NB results. I will check the results with a FDR of 0.1 again.

Below are two figures to show the delta_p and start allele frequency for the 96 potential outliers.

<img src="https://hzz0024.github.io/images/outlier/Deltap_p_plot_1.jpeg" alt="img" width="800"/>

<img src="https://hzz0024.github.io/images/outlier/Deltap_p_plot_2.jpeg" alt="img" width="800"/>

- SGS and survival vector methods

It looks that the distribution of p-value for these two method are "truncated". This is not surprising as most of the null model delta_p should be less than observed delta_p. Need look for alternative test for p-value generation, maybe t-test.  


