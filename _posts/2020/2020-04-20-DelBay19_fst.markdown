---
comments: true
title: DelBay19 fst evaluation and outlier detection
date: '2020-04-20 12:00'
tags:
  - DelBay19
  - Fst
  - ouliter
  - WGS
categories:
  - WGS data analysis
---

Using the rerun dataset, I'd like to estimate fst for each pairwise comparisons and visulize which parts of the genome have elevated genetic differentiation. The first step is to generate the site allele frequency (saf) likelihood for each sampling location. Below are the ANGSD posts that may be helpful for this step:

[NaN in fst values](https://github.com/ANGSD/angsd/issues/274)   
[Calculating FST: when to fold SFS](https://github.com/ANGSD/angsd/issues/259)   

Also in the Atlantic cod paper by Clucas et al. (2019), they set the minimum number of individuals threshold (-minInd) at either three or two-third of the number of individuals in the sampling location (12-15 total individuals for each site) to test the effect of missing data on pairwise Fst estimates. Here I used -minInd of 25 in the saf generation, corresponding that half of the inidviduals need to be present for each SNP. An example of the code is shown below,

---
### unfold saf file creation

```sh
module load angsd/0.931

angsd -b ch_50.list \
-anc cv30.fa -out ch_50_doSAF_minI25D25maxD167 \
-dosaf 1 -doDepth 1 -doCounts 1 -GL 1 \
-P 20 -minQ 20 -minMapQ 20 -setMinDepth 25 -setMaxDepth 167 -minInd 25 \
>& ch_50_doSAF_minI25D25maxD167.log
```
Note, if the doMajorMinor option is not provided for the saf step (as described at ANGSD webpage [http://popgen.dk/angsd/index.php/2d_SFS_Estimation](http://popgen.dk/angsd/index.php/2d_SFS_Estimation)), the SFS would be polarized by the ancestral states given by -anc fasta (see post [NaN in fst values](https://github.com/ANGSD/angsd/issues/274))

### fold sfs creation and fst estimate
```sh
/tools/angsd-0.931/misc/realSFS $POP1$BASENAME'.saf.idx' $POP2$BASENAME'.saf.idx' -fold 1 > $POP1'_'$POP2$BASENAME'_fold.2dSFS'
/tools/angsd-0.931/misc/realSFS fst index  $POP1$BASENAME'.saf.idx' $POP2$BASENAME'.saf.idx' -sfs $POP1'_'$POP2$BASENAME'_fold.2dSFS' -fold 1  -whichFst 1 -fstout $POP1'_'$POP2$BASENAME'_fold.alpha_beta' #whichFst 1 for small sample sizes, newer version of angsd
/tools/angsd-0.931/misc/realSFS fst print $POP1'_'$POP2$BASENAME'_fold.alpha_beta.fst.idx' > $POP1'_'$POP2$BASENAME'_fold.alpha_beta.txt'
awk '{ print $0 "\t" $3 / $4 }' $POP1'_'$POP2$BASENAME'_fold.alpha_beta.txt' > $POP1'_'$POP2$BASENAME'_fold.fst'
/tools/angsd-0.931/misc/realSFS fst stats $POP1'_'$POP2$BASENAME'_fold.alpha_beta.fst.idx' > $POP1'_'$POP2$BASENAME'_fold.average_fst.txt'
# windowsized fst
/tools/angsd-0.931/misc/realSFS fst stats2 $POP1'_'$POP2$BASENAME'_fold.alpha_beta.fst.idx' -type 0 -win 1000 -step 1000 > $POP1'_'$POP2$BASENAME'_fold.1kb_win_1kb_fst.txt'
/tools/angsd-0.931/misc/realSFS fst stats2 $POP1'_'$POP2$BASENAME'_fold.alpha_beta.fst.idx' -type 0 -win 5000 -step 5000 > $POP1'_'$POP2$BASENAME'_fold.5kb_win_5kb_fst.txt'
/tools/angsd-0.931/misc/realSFS fst stats2 $POP1'_'$POP2$BASENAME'_fold.alpha_beta.fst.idx' -type 0 -win 15000 -step 15000 > $POP1'_'$POP2$BASENAME'_fold.15kb_win_15kb_fst.txt'

# parse the output file for fst plotting, for example
awk -F"\t" '{print $2, $3, $3, $5}' ch_ref_doSAF_fold.1kb_win_1kb_fst.txt | awk '$2-=500' | awk '$3+=500' > ch_ref_1kb_fold.fst
awk -F"\t" '{print $2, $3, $3, $5}' ch_ref_doSAF_fold.5kb_win_5kb_fst.txt | awk '$2-=2500' | awk '$3+=2500' > ch_ref_5kb_fold.fst
awk -F"\t" '{print $2, $3, $3, $5}' ch_ref_doSAF_fold.15kb_win_15kb_fst.txt | awk '$2-=7500' | awk '$3+=7500' > ch_ref_15kb_fold.fst
```
---
### Results: number of SNPs and Fst values

The wild population order based on salinity from low to high (HC, ARN, COH, SR, NB)

Number of SNPs for each population in saf

| 			 |Total number of sites analyzed | Number of sites retained after filtering |  
| -----------|----------|--------------|
|    HC      | 552206979| 201271276    |
|    ARN     | 547968598| 198211880    |
|    COH     | 548674038| 208674608    |
|    SR      | 550602834| 204514057    |
|    NB      | 546390064| 193778045    |
|    REF     | 549584875| 189886237    |
|    CH      | 545117898| 181283004    |
   
Number of SNPs for each pairwise comparison

| 			 |No. sites | Fst unweight | Fst weight | 
| -----------|----------|--------------|------------|
|    CH_REF  | 170859421|  0.000664    |   0.000883 |
|    HC_ARN  | 185953051|  0.001151    |   0.000852 |
|    HC_COH  |          |              |            |
|    HC_SR   |          |              |            |
|    HC_NB   |          |              |            |
|    ARN_COH | 189084056|  0.000815    |   0.000675 |
|    ARN_SR  |          |              |            |
|    ARN_NB  | 182211161|  0.001035    |   0.000827 |
|    COH_SR  |          |              |            |
|    COH_NB  |          |              |            |
|    SR_NB   |          |              |            |

---
### Fst plots

- CH_REF

Mahattan plot based on single snp (Fst ranges from 0 - 0.2)

<img src="https://hzz0024.github.io/images/DelBay19_fst/Mahattan_ch_ref_singlesnp_fold.jpg" alt="img" width="800"/> 

Mahattan plot based on 1k, 5k, and 15k window-sized snp (Fst ranges from 0 - 0.1)

<img src="https://hzz0024.github.io/images/DelBay19_fst/Mahattan_ch_ref_fold.jpg" alt="img" width="800"/>

- HC_ARN 

Mahattan plot based on 1k, 5k, and 15k window-sized snp (Fst ranges from 0 - 0.1)

<img src="https://hzz0024.github.io/images/DelBay19_fst/Mahattan_HC_ARN_fold.jpg" alt="img" width="800"/>

- ARN_COH

Mahattan plot based on 1k, 5k, and 15k window-sized snp (Fst ranges from 0 - 0.1)

<img src="https://hzz0024.github.io/images/DelBay19_fst/Mahattan_ARN_COH_fold.jpg" alt="img" width="800"/>

- ARN_NB

Mahattan plot based on 1k, 5k, and 15k window-sized snp (Fst ranges from 0 - 0.1)

<img src="https://hzz0024.github.io/images/DelBay19_fst/Mahattan_ARN_NB_fold.jpg" alt="img" width="800"/>

---

### Outlier detection 

- Rationale: Locally adaptive loci exhibit larger differences in allele frequency than selectively neutral loci.

- Null Hypothesis: For each locus, we want to test Fst = Fst(neutral), where Fst (neutral) is the (unknown) population differentiation value for non-adaptive alleles.

<img src="https://hzz0024.github.io/images/Fst_null_hypo.jpg" alt="img" width="800"/>

- I used the code from LEA tutorial site with minor modifications (see R code below)

```R
# load the data set
DT <- fread("ARN_COH_15kb_fold.fst")
print(DT)
# here fst.values is just fst values for snps
fst.values = DT$angsd_Fst
# number of individuals in the comparison
n = 91
# here change the negative fst value into 0
fst.values[fst.values<0] = 0
#uncomment the line below will retain the SNPs with Fst >0
#fst.values = fst.values[fst.values!=0] 
fst.values
K = 2
z.scores = sqrt(fst.values*(n-K)/(1-fst.values))
z.scores
#Compute the GIF
K=2
lambda = median(z.scores^2)/qchisq(1/2, df = K-1)
lambda
# compute adjusted p-values from the combined z-scores
adj.p.values = pchisq(z.scores^2/lambda, df = K-1, lower = FALSE)
#histogram of p-values
hist(adj.p.values, col = "red")
```
<img src="https://hzz0024.github.io/images/trial_adj.p.values.jpeg" alt="img" width="800"/>

```R
# make qqplot for pvalue
# here rexp is used to simulate the Exponential Distributions of adjusted p.values
#qqplot(rexp(length(adj.p.values), rate = log(10)),
#       -log10(adj.p.values), xlab = "Expected quantile",
#       pch = 19, cex = .4)
#abline(0,1)
## FDR control: Benjamini-Hochberg at level q
plot(-log10(adj.p.values), main="Manhattan plot", xlab = "Locus", cex = .7, col = "grey")
L = length(adj.p.values)
q = 0.05
w = which(sort(adj.p.values) < q * (1:L)/L)
candidates = order(adj.p.values)[w]
candidates
points(candidates, -log10(adj.p.values)[candidates], pch = 19, cex = .7, col = "red")
```
<img src="https://hzz0024.github.io/images/trial_fst_p_values.jpeg" alt="img" width="800"/>



