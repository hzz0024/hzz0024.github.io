---
comments: true
title: Check the flanking regions of outliers
date: '2020-10-12 12:00'
tags:
  - DelBay19
  - ouliter
  - WGS
  - Fisher
categories:
  - WGS data analysis
---

This post is created to show some complementary results for outliers flanking regions. Here the outliers were previously identified from the Fisher's combined probability test.

|   Test       | fdr < 0.1 | fdr < 0.05| fdr < 0.01| fdr < 0.1 | fdr < 0.05| fdr < 0.01|
|--------------|-----------|-----------|-----------|-----------|-----------|-----------|
|              |   Fisher  |   Fisher  |  Fisher   | Z method  | Z method  |  Z method |
|REF-CH-SR-HC  |     11    |  4        |      0    |     41    | 10        |      1    |
|REF-CH-NB-HC  |     31    |  8        |      1    |     32    | 16        |      6    |
|SR-REF-COH-ARN|      0    |  0        |      0    |     20    | 0         |      0    |


Now check the bootstrap outliers with 10K SNP/window,

```sh
Fisher 
# easy - FDR < 0.1 hard - FDR < 0.05

cat REF-CH-SR-HC_10000_autput_bars.txt
"left" "right" "cut"
"1" "1_58451192" "1_59390060" "easy"
"2" "3_23394647" "3_27690174" "easy"
"3" "4_15520681" "4_16613658" "easy"
"4" "4_17512082" "4_18442740" "easy"
"5" "5_12499378" "5_13478390" "easy"
"6" "5_15407830" "5_16927227" "easy"
"7" "5_19678122" "5_21783056" "easy"
"8" "5_28723146" "5_29699090" "easy"
"9" "5_51505759" "5_53606658" "easy"
"10" "7_38896049" "7_42790264" "easy"
cat REF-CH-NB-HC_10000_autput_bars.txt
"left" "right" "cut"
"1" "1_59390060" "1_60535324" "easy"
"2" "3_64541985" "3_65423397" "easy"
"3" "4_17512082" "4_18442740" "easy"
"4" "5_39538914" "5_40762320" "easy"
"5" "5_58312909" "5_59809563" "easy"
"6" "8_36972680" "8_45902134" "easy"
"7" "10_5496026" "10_11518260" "easy"
"8" "10_9441369" "10_32597966" "easy"
"9" "1_1582723" "1_2879011" "hard"
"10" "1_32231416" "1_33723886" "hard"
"11" "5_12499378" "5_13478390" "hard"
"12" "5_15407830" "5_16927227" "hard"

Z method

cat REF-CH-SR-HC_10000_autput_bars.txt
"left" "right" "cut"
"1" "1_58451192" "1_59390060" "hard"
"2" "5_19678122" "5_21783056" "hard"
"3" "5_51505759" "5_53606658" "hard"
"4" "7_38896049" "7_42790264" "hard"
cat REF-CH-NB-HC_10000_autput_bars.txt
"left" "right" "cut"
"1" "1_1582723" "1_2879011" "hard"
"2" "1_32231416" "1_33723886" "hard"
"3" "1_59390060" "1_60535324" "hard"
"4" "3_64541985" "3_65423397" "hard"
"5" "5_12499378" "5_13478390" "hard"
"6" "5_15407830" "5_16927227" "hard"
"7" "5_39538914" "5_40762320" "hard"
```

Let us start with chr5:15407830-16927227, an outlier window (with 10K SNP/window for bootstrap) shared by both REF-CH-SR-HC and REF-CH-NB-HC groups in Fisher's approach and shown in the REF-CH-NB-HC result by Z method. In this window, two SNPs have been identified as single-SNP outliers: 5_16551904 and 5_16552716. Specifically, SNP 5_16552716 is also identified as an outlier shared by both groups (e.g. REF-CH-SR-HC and REF-CH-NB-HC) and methods (Fisher and Z methods). In addition, a gene named *actin-depolymerizing factor 1-like* is linked to these two SNPs (spans from 16551175 to 16553910,[https://www.ncbi.nlm.nih.gov/gene/?term=LOC111134891](https://www.ncbi.nlm.nih.gov/gene/?term=LOC111134891)). The SNP annotation link is [here](https://docs.google.com/spreadsheets/d/19TCyi7zKxK7OC6TFrPtCR4DkcgOBqLe20pV2jQw5Jkk/edit?usp=sharing)

#### Dxy plots

- Plotting the dxy for each group comparsion. Green zone is the bootstrap outlier with 10K SNPs/window (regardless of FDR as dxy only focus on the two population constrast). Red dots are two single-SNP oultiers 5_16551904 and 5_16552716.

<img src="https://hzz0024.github.io/images/dxy/chr5_10K_16551904_16552716.jpeg" alt="img" width="800"/>

- Plotting the dxy for each group comparsion. Green zone is the bootstrap outlier with 1500 SNPs/window (chr5: 16474915 - 16572111). Red dots are two single-SNP oultiers 5_16551904 and 5_16552716.

<img src="https://hzz0024.github.io/images/dxy/chr5_1500_16551904_16552716.jpeg" alt="img" width="800"/>

- Plotting the dxy for each group comparsion. Green zone is the bootstrap outlier with 150 SNPs/window (chr5: 16544428 - 16554078). Red dots are two single-SNP oultiers 5_16551904 and 5_16552716.

<img src="https://hzz0024.github.io/images/dxy/chr5_150_16551904_16552716.jpeg" alt="img" width="800"/>

- Plotting the dxy for each group comparsion. Green zone is the bootstrap outlier with 25 SNPs/window (chr5: 16551755 - 16552962). Red dots are two single-SNP oultiers 5_16551904 and 5_16552716.

<img src="https://hzz0024.github.io/images/dxy/chr5_25_16551904_16552716.jpeg" alt="img" width="800"/>

#### Tajima's D plots

- Plotting the Tajima'D and dxy for CH-REF contrasts. Green zone is the bootstrap outlier with 150 SNPs/window (chr5: 16544428 - 16554078). Red dots are two single-SNP oultiers 5_16551904 and 5_16552716. Tajima'D is calculated in 10K window.

<img src="https://hzz0024.github.io/images/dxy/CH_REF_chr5_150_10K" alt="img" width="800"/>

- Plotting the Tajima'D and dxy for CH-REF contrasts. Green zone is the bootstrap outlier with 150 SNPs/window (chr5: 16544428 - 16554078). Red dots are two single-SNP oultiers 5_16551904 and 5_16552716. Tajima'D is calculated in 1000 bp window.

<img src="https://hzz0024.github.io/images/dxy/CH_REF_chr5_150_1000" alt="img" width="800"/>

---

Dxy plotting steps:

1) prepare the SNP list for a window: here is the 1 unit before and after the window (in csv file). For example, for 1500 SNP/window in chr5: 16544428 - 16554078, the covered regions should be xlim = c(16377719, 16669307).

2) prepare the single snp outliers (in csv file). Here is 5_16551904 and 5_16552716

3) modifiy the manhattan.R if necessary. Find it in DelBay_project/R_scripts/Dxy/manhattan.R

4) run the R code outlier_dxy_plot.R. Find it in DelBay_project/R_scripts/Dxy/oulier_dxy_plot.R

--- 

Below are some notes and script for theta estimates.

#### Theta estimates

Two methods have been proposed to calculate the theta values, see this post [Thetas: new saf2theta gives different results than old angsd -doThetas](https://github.com/ANGSD/angsd/issues/336).

For initial saf file, some parameter setting examples can be found [https://github.com/atigano/Peromyscus_eremicus_genome/tree/master/variant_calling_ANGSD](https://github.com/atigano/Peromyscus_eremicus_genome/tree/master/variant_calling_ANGSD)

- Old method

1) produce the saf file

```sh
#!/bin/bash
# Read a string with spaces using for loop

for pop in CH REF HC COH ARN SR NB
do
    echo -e 'module load angsd/0.931\n###this script will work on bamfiles by population and calculate saf  & maf\n# maybe edit\ntarget="'$pop'"\nNB_CPU=20 #change accordingly\nREGIONS="-rf chr_list.txt" #optional\n#REGIONS="" # to remove the options to focus on a limited number of regions\n\n#prepare variables - avoid to modify\nsource /scratch/hzz0024/DelBay19_Sep/01_scripts/01_config.sh\nN_IND=$(wc -l $'$pop' | cut -d " " -f 1)\nMIN_IND=$(($N_IND*7/10))\n\necho "Ouput can be used for depth evaluation with all individuals listed in "$'$pop'\necho "keep loci with at leat one read for n individuals = "$MIN_IND", which is 70% of total "$N_IND" individuals"\n\nangsd -P $NB_CPU -doMaf 1 -dosaf 1 -doCounts 1 -GL 1 -doMajorMinor 1 -anc $ANC -remove_bads 1 -minInd $MIN_IND -setMaxDepth 200 -minQ 20 -minMapQ 30 -b $'$pop' $REGIONS -out "/scratch/hzz0024/DelBay19_Sep/11_SFS/"$target"_SFS_cv30"' >> formal/'09_theta_'$pop'_cv30.sh'
done

# an example 
angsd -P $NB_CPU -doMaf 1 -dosaf 1 -doCounts 1 -GL 1 -doMajorMinor 1 -anc $ANC -remove_bads 1 -minInd $MIN_IND -setMaxDepth 200 -minQ 20 -minMapQ 30 -b $CH $REGIONS -out "/scratch/hzz0024/DelBay19_Sep/11_SFS/"$target"_SFS_cv30"
```
2) produce the sfs file

```sh
## Get SFS from saf
module load angsd/0.931

BASE_DIR='/scratch/hzz0024/DelBay19_Sep/11_SFS/'
for POP in {CH,REF,HC,ARN,COH,SR,NB}; do
    echo $POP' sfs starts'
    /tools/angsd-0.931/misc/realSFS \
      $BASE_DIR$POP'_SFS_cv30.saf.idx' \
      -P 16 -fold 1 \
      > $BASE_DIR$POP'.sfs'
done
```

Note: delete extra 0 values in sfs file. For example, CH pop has a total of 50 samples, and 101 if unfold values. We need to delete the extra 50 0 values and only retain the 51 values.

3) Estimate theta

```sh
#!/bin/bash
# Read a string with spaces using for loop
for POP in CH REF HC ARN COH SR NB
do
    echo -e 'module load angsd/0.931\n\ntarget=\x27'$POP'\x27\nNB_CPU=20 #change accordingly\nsource /scratch/hzz0024/DelBay19_Sep/01_scripts/01_config.sh\nBASE_DIR=\x27/scratch/hzz0024/DelBay19_Sep/09_theta/\x27\n\nangsd -P $NB_CPU -doSaf 1 -doThetas 1 -GL 1 -fold 1 -pest $BASE_DIR$target\x27.sfs\x27 -anc $ANC -b $'$POP' -sites ALL_sites_all_maf0.05_pctind0.7_maxdepth3dv_snplist_4col_cv30 -out $BASE_DIR$target\n\n## Print per-SNP theta\n/tools/angsd-0.931/misc/thetaStat print $BASE_DIR$target\x27.thetas.idx\x27\n\n## Do fixed window theta\n/tools/angsd-0.931/misc/thetaStat do_stat $BASE_DIR$target\x27.thetas.idx\x27 -win 10000 -step 10000 -outnames $BASE_DIR$target\x27.thetas.window.idx\x27\n\n## Do per-chromosome average theta\n/tools/angsd-0.931/misc/thetaStat do_stat $BASE_DIR$target\x27.thetas.idx\x27 -outnames $BASE_DIR$target\x27.thetas.average.idx\x27' >> formal/'09_theta_by_pop_'$POP'.sh'
done

# example
module load angsd/0.931

target='CH'
NB_CPU=20 #change accordingly
source /scratch/hzz0024/DelBay19_Sep/01_scripts/01_config.sh
BASE_DIR='/scratch/hzz0024/DelBay19_Sep/09_theta/'

angsd -P $NB_CPU -doSaf 1 -doThetas 1 -GL 1 -fold 1 -pest $BASE_DIR$target'.sfs' -anc $ANC -b $CH -sites ALL_sites_all_maf0.05_pctind0.7_maxdepth3dv_snplist_4col_cv30 -out $BASE_DIR$target

## Print per-SNP theta
/tools/angsd-0.931/misc/thetaStat print $BASE_DIR$target'.thetas.idx'

## Do fixed window theta
/tools/angsd-0.931/misc/thetaStat do_stat $BASE_DIR$target'.thetas.idx' -win 10000 -step 10000 -outnames $BASE_DIR$target'.thetas.window.idx'

## Do per-chromosome average theta
/tools/angsd-0.931/misc/thetaStat do_stat $BASE_DIR$target'.thetas.idx' -outnames $BASE_DIR$target'.thetas.average.idx'
```

- New method

Using the same sfs files in old method, run the script below (this is the most recent method in Angsd)

```sh
module load angsd/0.931

BASE_DIR='/scratch/hzz0024/DelBay19_Sep/09_theta_new_method/'

for POP in CH REF HC ARN COH SR NB; do
    echo '~~~~~~~~~~~~~~~~~~~~~~~step 1 '$POP' sfs starts~~~~~~~~~~~~~~~~~~~~~~~'
    /tools/angsd-0.931/misc/realSFS \
    $BASE_DIR$POP'_SFS_cv30.saf.idx' \
    -P 16 \
    -fold 1 \
    > $BASE_DIR$POP'.sfs'
done

## Step 2a Estimate theta
for POP in CH REF HC ARN COH SR NB; do
    echo '~~~~~~~~~~~~~~~~~~~~~~~step 2a '$POP' theta estimate starts~~~~~~~~~~~~~~~~~~~~~~~'
    /tools/angsd-0.931/misc/realSFS saf2theta \
    $BASE_DIR$POP'_maf0.05_pctind0.7_cv30.saf.idx' \
    -sfs $BASE_DIR$POP'.sfs' \
    -fold 1 \
    -outname $BASE_DIR$POP
done

## Step 2b Print per-SNP theta
for POP in CH REF HC ARN COH SR NB; do
    echo '~~~~~~~~~~~~~~~~~~~~~~~step 2a '$POP' per-SNP theta print starts~~~~~~~~~~~~~~~~~~~~~~~'
    /tools/angsd-0.931/misc/thetaStat print \
    $BASE_DIR$POP'.thetas.idx' \
    > $BASE_DIR$POP'.thetas.tsv'
done

## Step 3a do fixed window theta
for POP in CH REF HC ARN COH SR NB; do
    echo '~~~~~~~~~~~~~~~~~~~~~~~step 3a '$POP' fixed window theta starts~~~~~~~~~~~~~~~~~~~~~~~'
    /tools/angsd-0.931/misc/thetaStat do_stat \
    $BASE_DIR$POP'.thetas.idx' \
    -win 10000 -step 10000 \
    -outnames $BASE_DIR$POP'.thetas.window.idx'
done

## Step 3b do per-chromosome average theta
for POP in CH REF HC ARN COH SR NB; do
    echo '~~~~~~~~~~~~~~~~~~~~~~~step 3b '$POP' per-chromosome average theta starts~~~~~~~~~~~~~~~~~~~~~~~'
    /tools/angsd-0.931/misc/thetaStat do_stat \
    $BASE_DIR$POP'.thetas.idx' \
    -outnames $BASE_DIR$POP'.thetas.average.idx'
done
```

#### Theta estimates correction

```sh
module load bedtools/2.29.0
WIN=5000 
###in the loop
for CHR in `cat chromosomes.txt`; do ###list of chromosomes in chromosomes.txt file; do
###make bed file for all variant and invariant sites for each chromosome
grep "$CHR" ALL_maf0.05_pctind0.7_cv30_allvar.mafs > ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.mafs
cut -f 1,2 ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.mafs > ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.txt
cut -f2 ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.txt | awk '{$1 = $1 + 1; print}' | paste ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.txt - | sed 's/ //g'> ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.bed

###split the genome window file in chr
grep "$CHR" genome_windows_${WIN}.bed > genome_windows_${WIN}_${CHR}.bed


###calculate the number of sites in each window for each chromosome
bedtools coverage -a genome_windows_${WIN}_${CHR}.bed -b ALL_maf0.05_pctind0.7_cv30_allvar_${CHR}.bed -counts > allvar_${WIN}bwin_${CHR}.txt
## not sure why replace the \t0 here
cut -f4 allvar_${WIN}bwin_${CHR}.txt | sed 's/\t0/NA/g' > allvar_${WIN}win_NA_${CHR}.txt

grep "$CHR" ALL_pi_global.bed > ALL_pi_global_${CHR}.bed
## pate - will add the new column to the end of data
awk '{print exp($4)}' ALL_pi_global_${CHR}.bed | paste ALL_pi_global_${CHR}.bed - > ALL_pi_global_log_${CHR}.bed
# bedtools is used to sum up the theta value in each window
bedtools map -a genome_windows_${WIN}_${CHR}.bed -b ALL_pi_global_log_${CHR}.bed -c 5 -o sum | sed 's/\t[.]/\tNA/g' - > ALL_pi_global_log_${WIN}bwin_${CHR}.txt
###pi_peer_global_noout_log_50kbwin_chr2_pilon.txt

paste ALL_pi_global_log_${WIN}bwin_${CHR}.txt allvar_${WIN}win_NA_${CHR}.txt | sed 's/[.]\t/NA\t/g' - > pi_peer_global_noout_log_${WIN}bwin_sites_${CHR}.txt
## divide the theta by number of SNPs in a window
awk '{if(/NA/)var="NA";else var=$4/$5;print var}' pi_peer_global_noout_log_${WIN}bwin_sites_${CHR}.txt | paste pi_peer_global_noout_log_${WIN}bwin_sites_${CHR}.txt - > pi_peer_global_noout_log_${WIN}bwin_sites_corrected_${CHR}.txt

done
```


